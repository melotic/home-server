name: Deploy

permissions:
  id-token: write
  contents: read

on:
  push:
    # we only care about .sh and .yml files pushes to main
    paths:
      - '**.sh'
      - '**.yml'
    branches:
      - main

concurrency:
  group: morpheus

env:
  TERM: xterm-256color

jobs:
  # we don't use this to share secrets, we just want to make sure that the secrets are valid
  # before we deploy.
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Login to Azure CLI"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Download Secrets"
        run: ./secrets/download-secrets-kv.sh ${{ secrets.AZURE_KEYVAULT_NAME }}

      - name: "Check Secrets"
        run: ./secrets/check-secrets.sh

  deploy:
    needs: prepare
    name: Deploy
    environment: morpheus
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Login to Azure CLI"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Download Secrets"
        run: ./secrets/download-secrets-kv.sh ${{ secrets.AZURE_KEYVAULT_NAME }}

      - name: Tailscale
        uses: tailscale/github-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

      - name: "Install SSH Key"
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Sync files to remote host
        run: |
          rsync -azP ./docker-compose.yml ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/docker-services
          rsync -azP ./.env ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/docker-services
          # sync all files in ./tests to /tmp/tests/
          rsync -azP ./tests ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/tmp

      - name: Deploy
        run: |
          ssh -tt ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'cd docker-services && docker compose up -d --remove-orphans'

      - name: "Wait for alarms to update"
        run: sleep 330 # the http checks are over 5 min intervals.

      - name: "Run tests"
        run: |
          # run all files in /tmp/tests on the machine
          ssh -tt ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'cd /tmp/tests && for f in *.sh; do bash "$f"; done'