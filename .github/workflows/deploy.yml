name: Deploy

permissions:
  id-token: write
  contents: read

on:
  push:
    # we only care about .sh and .yml files pushes to main
    paths:
      - "**.sh"
      - "**.yml"
    branches:
      - main

concurrency:
  group: morpheus

env:
  TERM: xterm-256color
  CARGO_TERM_COLOR: always

jobs:
  deploy:
    name: Deploy
    environment: morpheus
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      - name: "Login to Azure CLI"
        uses: azure/login@92a5484dfaf04ca78a94597f4f19fea633851fa2 # v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: "Install rust"
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
        with:
          toolchain: stable
      - uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: "Build docker-kv-util"
        run: cargo build --release
      - name: "Download Secrets"
        run: ./target/release/docker-kv-util ${{ secrets.AZURE_KEYVAULT_NAME }} download
      - name: "Check Secrets"
        run: ./secrets/check-secrets.sh

      - name: Tailscale
        uses: tailscale/github-action@cc6818dd6930277a6e4b5d249e32ba2f4cf6ea32 # v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}

      - name: "Install SSH Key"
        uses: shimataro/ssh-key-action@685d0f20da72e4b53cc81d373a2ed0a867770e46 # v2.5.1
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}

      - name: Sync files to remote host
        run: |
          rsync -azP ./docker-compose.yml ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/docker-services
          rsync -azP ./.env ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:~/docker-services
          # sync all files in ./tests to /tmp/tests/
          rsync -azP ./tests ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/tmp

      - name: Deploy
        run: |
          ssh ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'cd docker-services && docker compose up -d --remove-orphans'

      - name: "Wait for alarms to update"
        run: sleep 330 # the http checks are over 5 min intervals.

      - name: "Run tests"
        run: |
          # run all files in /tmp/tests on the machine
          ssh -tt ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} 'cd /tmp/tests && for f in *.sh; do bash "$f"; done'
